from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import os
import subprocess

app = Flask(__name__)
CORS(app, origins=["https://incognito.guru"])  # Allow CORS for the WordPress site

@app.route('/generate', methods=['POST'])
def generate_vpn_config():
    data = request.json
    account_number = data.get('accountNumber')
    if not account_number:
        return jsonify({'error': 'Account number is required'}), 400

    # Run your shell script to generate the VPN configuration
    try:
        result = subprocess.run(['/root/start.sh', account_number], capture_output=True, text=True, check=True)
        app.logger.info(f'start.sh output: {result.stdout}')
        app.logger.error(f'start.sh error: {result.stderr}')
    except subprocess.CalledProcessError as e:
        app.logger.error(f'Error generating VPN config: {e.stderr}')
        return jsonify({'error': 'Error generating VPN config'}), 500

    client_folder = f'/public/{account_number}'
    vpn_file_path = f'{client_folder}/{account_number}.ovpn'

    download_url = f'https://de1.incognito.guru:5000/download/{account_number}'
    return jsonify({
        'accountNumber': account_number, 
        'clientFolder': client_folder,
        'downloadUrl': download_url
    })

@app.route('/download/<account_number>', methods=['GET'])
def download_vpn_config(account_number):
    file_path = f'/public/{account_number}/{account_number}.ovpn'
    if os.path.exists(file_path):
        return send_file(file_path, as_attachment=True)
    else:
        return jsonify({'error': 'File not found'}), 404

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, ssl_context=(
        '/etc/letsencrypt/live/de1.incognito.guru/fullchain.pem', 
        '/etc/letsencrypt/live/de1.incognito.guru/privkey.pem'))
